env:
  # Some of these are end-to-end integration tests that require a Docker
  # registry to run. We boot one up in the .hooks/pre-command, and then use that
  # registry for doing all the push/pull testing.
  IMAGE_REPO: "localhost:5005/docker-compose-test"

steps:
  - label: ":shell: Shellcheck"
    plugins:
      shellcheck#v1.3.0:
        files:
          - hooks/**
          - lib/**
          - commands/**

  - label: ":sparkles: Lint"
    plugins:
      plugin-linter#v3.3.0:
        id: docker-compose
        readme: docs/examples.md

  - label: ":bash: Tests"
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: tests
        # for pretty colors
        tty: true
        command: ["bats", "tests", "tests/v1"]

  # The rest of the steps are integration tests

  - label: run, with links that fail
    command: echo hello from alpine
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithfailinglink
        config: tests/composefiles/docker-compose.v2.1.yml

  - label: run, with environment
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithenv
        config: tests/composefiles/docker-compose.v2.1.yml
        environment:
          - ALPACAS=sometimes

  - label: run, with multi-line command
    command: |
      echo \
      hello \
      world
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithenv
        config: tests/composefiles/docker-compose.v2.1.yml

  - label: prebuild with v2.0
    key: prebuild-2-0
    env:
      PERSIST_REGISTRY: true
    command: /hello
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        push: "helloworld:${IMAGE_REPO}"
        config: tests/composefiles/docker-compose.v2.0.yml

  - label: run after build with v2.0
    depends_on: prebuild-2-0
    env:
      RESTORE_REGISTRY_FROM: prebuild-2-0
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.0.yml
        command: ["/hello"]

  - label: prebuild with v2.1
    key: prebuild-2-1
    env:
      PERSIST_REGISTRY: true
    command: /hello
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        push: "helloworld:${IMAGE_REPO}"
        config: tests/composefiles/docker-compose.v2.1.yml

  - label: run with default command
    depends_on: prebuild-2-1
    env:
      RESTORE_REGISTRY_FROM: prebuild-2-1
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait: ~

  - label: prebuild with custom tag
    key: prebuild-custom-image-name
    env:
      PERSIST_REGISTRY: true
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        push: "helloworld:${IMAGE_REPO}:llamas-build-${BUILDKITE_BUILD_NUMBER}"
        config: tests/composefiles/docker-compose.v2.1.yml

  - label: run after prebuild with custom tag
    depends_on: prebuild-custom-image-name
    key: run-custom-image-name
    env:
      RESTORE_REGISTRY_FROM: prebuild-custom-image-name
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.1.yml
        commmand: ["/hello"]

  - label: push after build with custom tag
    depends_on: run-custom-image-name
    env:
      RESTORE_REGISTRY_FROM: prebuild-custom-image-name
    plugins:
      ${BUILDKITE_PULL_REQUEST_REPO:-$BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        push: helloworld:${IMAGE_REPO}:llamas-build-${BUILDKITE_BUILD_NUMBER}-push
        config: tests/composefiles/docker-compose.v2.1.yml
